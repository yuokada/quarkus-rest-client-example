---
name: Docker publish

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 #v3.6.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dquarkus.container-image.registry=${{ env.REGISTRY }}

      - name: Push Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker tag ${{ env.REGISTRY }}/runner/bms-openapi-server:1.0-SNAPSHOT ${{ env.REGISTRY }}/yuokada/quarkus-rest-client-example:server-latest
          docker tag ${{ env.REGISTRY }}/runner/bms-openapi-client:1.0-SNAPSHOT ${{ env.REGISTRY }}/yuokada/quarkus-rest-client-example:client-latest
          docker image ls
          docker push ${{ env.REGISTRY }}/yuokada/quarkus-rest-client-example:server-latest
          docker push ${{ env.REGISTRY }}/yuokada/quarkus-rest-client-example:client-latest

#      # Sign the resulting Docker image digest except on PRs.
#      # This will only write to the public Rekor transparency log when the Docker
#      # repository is public to avoid leaking data.  If you would like to publish
#      # transparency data even for private images, pass --force to cosign below.
#      # https://github.com/sigstore/cosign
#      - name: Sign the published Docker image
#        if: ${{ github.event_name != 'pull_request' }}
#        env:
#          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
#          TAGS: ${{ steps.meta.outputs.tags }}
#          DIGEST: ${{ steps.build-and-push.outputs.digest }}
#        # This step uses the identity token to provision an ephemeral certificate
#        # against the sigstore community Fulcio instance.
#        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
